global:
  # Global Alertmanager settings
  smtp_smarthost: 'localhost:587'
  smtp_from: 'alertmanager@k8sgpt-demo.local'

# Template files (optional custom templates)
templates:
  - '/etc/alertmanager/templates/*.tmpl'

# Main routing configuration
route:
  # Group alerts to reduce noise
  group_by: ['alertname', 'cluster', 'service']
  group_wait: 30s
  group_interval: 5m
  repeat_interval: 2h
  receiver: 'k8sgpt-webhook'
  
  # Specific routes for different alert types
  routes:
    # Critical alerts - immediate notification
    - match:
        severity: critical
      receiver: 'k8sgpt-critical'
      group_wait: 10s
      group_interval: 1m
      repeat_interval: 30m
    
    # K8sGPT analyzable alerts
    - match_re:
        alertname: '(PodCrashLooping|PodNotReady|KubernetesContainerOomKilled|KubePodImagePullBackOff|KubePersistentVolumeFillingUp)'
      receiver: 'k8sgpt-analyzer'
      group_wait: 15s
      group_interval: 2m
      repeat_interval: 1h

# Alert receivers configuration
receivers:
  # Default webhook receiver (simulated k8sgpt integration)
  - name: 'k8sgpt-webhook'
    webhook_configs:
    - url: 'http://k8sgpt-webhook-sim.k8sgpt-demo.svc.cluster.local:8080/alerts'
      http_config:
        basic_auth:
          username: 'k8sgpt'
          password: 'demo-webhook'
      title: 'K8sGPT Alert Notification'
      text: |
        Alert: {{ .GroupLabels.alertname }}
        Summary: {{ range .Alerts }}{{ .Annotations.summary }}{{ end }}
        Description: {{ range .Alerts }}{{ .Annotations.description }}{{ end }}
        Severity: {{ .GroupLabels.severity }}
        Cluster: {{ .GroupLabels.cluster }}
        Namespace: {{ .GroupLabels.namespace }}
  
  # Critical alerts receiver
  - name: 'k8sgpt-critical'
    webhook_configs:
    - url: 'http://k8sgpt-webhook-sim.k8sgpt-demo.svc.cluster.local:8080/critical'
      http_config:
        basic_auth:
          username: 'k8sgpt'
          password: 'demo-webhook'
      title: 'CRITICAL: K8sGPT Alert'
      text: |
        ðŸš¨ CRITICAL ALERT ðŸš¨
        Alert: {{ .GroupLabels.alertname }}
        Summary: {{ range .Alerts }}{{ .Annotations.summary }}{{ end }}
        Description: {{ range .Alerts }}{{ .Annotations.description }}{{ end }}
        Time: {{ range .Alerts }}{{ .StartsAt }}{{ end }}
  
  # Analyzer-specific receiver  
  - name: 'k8sgpt-analyzer'
    webhook_configs:
    - url: 'http://k8sgpt-webhook-sim.k8sgpt-demo.svc.cluster.local:8080/analyze'
      http_config:
        basic_auth:
          username: 'k8sgpt'
          password: 'demo-webhook'
      title: 'K8sGPT Analysis Request'
      text: |
        Analysis requested for: {{ .GroupLabels.alertname }}
        Affected Resources:
        {{- range .Alerts }}
        - {{ .Labels.namespace }}/{{ .Labels.pod }}{{ .Labels.deployment }}{{ .Labels.service }}
        {{- end }}
        Summary: {{ range .Alerts }}{{ .Annotations.summary }}{{ end }}

# Inhibition rules to reduce noise
inhibit_rules:
  # Inhibit warning alerts when critical alerts are firing
  - source_match:
      severity: 'critical'
    target_match:
      severity: 'warning'
    equal: ['alertname', 'cluster', 'service']
  
  # Inhibit individual pod alerts when deployment is alerting
  - source_match:
      alertname: 'KubernetesDeploymentReplicasMismatch'
    target_match_re:
      alertname: '(PodCrashLooping|PodNotReady)'
    equal: ['namespace', 'deployment']